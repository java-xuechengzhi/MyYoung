#include<stdio.h>
int main() {
    int n;//代表要输入的字符长度
    int flag = 0;//用来标记是否出现了不能匹配的单个字符
    int count = 0;// 用来表示最少的交换次数
    int j;//用来盛放n-1的值，仅是为了方便
    char a[8005];//用来盛放字符串
    char t;//用于字符的交换
    scanf("%d", &n);//输入n
    scanf("%s", a);//输入字符串
    j = n - 1;
    for (int i = 0; i < j; i++) {//从下标为i的字符开始，到下标为【j-1】的字符结束，依次固定字符
        for (int k = j; k >= i; k--) {//然后从下标为j的字符开始，到下标为i的结束（也就是从后往前）依次与固定的字符作比较
            if (i == k) {//当固定的字符在字符串中没有找到能与它匹配的字符时
                if (n % 2 == 0 || flag) {//判断字符串的长度是不是偶数，或者flag的值是否为1
                    printf("Impossible");//如果满足这两个条件中的任意一个，那么这个字符不可能是回文串，输出Impossible结束即可
                    return 0;
                }
                flag = 1;//如果字符串长度为奇数并且flag的值为0，就将flag赋值为1 ，代表出现了不能匹配的单个字符
                count += n / 2 - i;//count的值加上n/2-i ，n/2-i代表这个单个字符移到字符串中间位置的步数
            }
            else if (a[i] == a[k]) {// 如果两个字符相同，即固定的字符在后面找到了与它能匹配的字符
                for (int b = k; b < j; b++) {//将a[k]这个字符移到a[j]的位置
                    t = a[b];//交换过程
                    a[b] = a[b + 1];
                    a[b + 1] = t;
                    count++;//每交换一次，count自增1
                }
                j--;//当固定的字符找到能与它匹配的字符时，j自减1 ，这一步很关键
                break;// 当固定的字符找到能与它匹配的字符时，跳出第二层循环，第一层循环继续固定下一个字符
            }
        }
    }
    printf("%d", count);//输出count的值
    return 0;
}